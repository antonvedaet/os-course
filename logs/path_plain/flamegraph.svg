<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="309" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="309" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (2 samples, 1.79%)</title><rect x="905.5" y="101" width="21.1" height="15.0" fill="rgb(254,120,52)" rx="2" ry="2" />
<text text-anchor="" x="908.54" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.89%)</title><rect x="852.9" y="117" width="10.5" height="15.0" fill="rgb(213,93,12)" rx="2" ry="2" />
<text text-anchor="" x="855.86" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc.so.6] (100 samples, 89.29%)</title><rect x="136.4" y="213" width="1053.6" height="15.0" fill="rgb(241,142,20)" rx="2" ry="2" />
<text text-anchor="" x="139.43" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libc.so.6]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bool std::operator&gt;&lt;int, int&gt; (1 samples, 0.89%)</title><rect x="1053.0" y="85" width="10.6" height="15.0" fill="rgb(234,179,50)" rx="2" ry="2" />
<text text-anchor="" x="1056.04" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[ld-linux-x86-64.so.2] (7 samples, 6.25%)</title><rect x="20.5" y="181" width="73.8" height="15.0" fill="rgb(241,114,19)" rx="2" ry="2" />
<text text-anchor="" x="23.54" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[ld-linu..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::pair&lt;int, int&gt;::operator= (2 samples, 1.79%)</title><rect x="1063.6" y="117" width="21.0" height="15.0" fill="rgb(239,40,20)" rx="2" ry="2" />
<text text-anchor="" x="1066.57" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (1 samples, 0.89%)</title><rect x="1126.8" y="101" width="10.5" height="15.0" fill="rgb(250,3,16)" rx="2" ry="2" />
<text text-anchor="" x="1129.79" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (1 samples, 0.89%)</title><rect x="673.8" y="149" width="10.5" height="15.0" fill="rgb(252,39,52)" rx="2" ry="2" />
<text text-anchor="" x="676.75" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bool __gnu_cxx::operator!=&lt;std::pair&lt;unsigned long, unsigned long&gt;*, std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt; (1 samples, 0.89%)</title><rect x="1158.4" y="181" width="10.5" height="15.0" fill="rgb(238,211,26)" rx="2" ry="2" />
<text text-anchor="" x="1161.39" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::end (1 samples, 0.89%)</title><rect x="873.9" y="117" width="10.6" height="15.0" fill="rgb(229,95,11)" rx="2" ry="2" />
<text text-anchor="" x="876.93" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::back (1 samples, 0.89%)</title><rect x="1105.7" y="133" width="10.5" height="15.0" fill="rgb(206,204,24)" rx="2" ry="2" />
<text text-anchor="" x="1108.71" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (1 samples, 0.89%)</title><rect x="1126.8" y="117" width="10.5" height="15.0" fill="rgb(227,212,4)" rx="2" ry="2" />
<text text-anchor="" x="1129.79" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::pair&lt;int, int&gt;::operator= (2 samples, 1.79%)</title><rect x="589.5" y="85" width="21.0" height="15.0" fill="rgb(216,93,46)" rx="2" ry="2" />
<text text-anchor="" x="592.46" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::__push_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;, long, std::pair&lt;int, int&gt;, __gnu_cxx::__ops::_Iter_comp_val&lt;std::greater&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt; (9 samples, 8.04%)</title><rect x="515.7" y="101" width="94.8" height="15.0" fill="rgb(212,134,17)" rx="2" ry="2" />
<text text-anchor="" x="518.71" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >void std::_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::push_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;, std::greater&lt;std::pair&lt;int, int&gt; &gt; &gt; (1 samples, 0.89%)</title><rect x="1147.9" y="149" width="10.5" height="15.0" fill="rgb(224,17,42)" rx="2" ry="2" />
<text text-anchor="" x="1150.86" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>int* std::__uninitialized_fill_n_a&lt;int*, unsigned long, int, int&gt; (2 samples, 1.79%)</title><rect x="715.9" y="133" width="21.1" height="15.0" fill="rgb(218,159,37)" rx="2" ry="2" />
<text text-anchor="" x="718.89" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>unsigned long const&amp; std::min&lt;unsigned long&gt; (1 samples, 0.89%)</title><rect x="1137.3" y="69" width="10.6" height="15.0" fill="rgb(253,119,19)" rx="2" ry="2" />
<text text-anchor="" x="1140.32" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[ld-linux-x86-64.so.2] (6 samples, 5.36%)</title><rect x="31.1" y="133" width="63.2" height="15.0" fill="rgb(232,74,53)" rx="2" ry="2" />
<text text-anchor="" x="34.07" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[ld-li..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::priority_queue&lt;std::pair&lt;int, int&gt;, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;, std::greater&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace&lt;int&amp;, int&amp;&gt; (32 samples, 28.57%)</title><rect x="768.6" y="165" width="337.1" height="15.0" fill="rgb(209,32,16)" rx="2" ry="2" />
<text text-anchor="" x="771.57" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >void std::priority_queue&lt;std::pair&lt;int, int&gt;,..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>path (112 samples, 100.00%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(236,183,8)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >path</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_append&lt;int, int&amp;&gt; (3 samples, 2.68%)</title><rect x="1116.2" y="133" width="31.7" height="15.0" fill="rgb(241,125,5)" rx="2" ry="2" />
<text text-anchor="" x="1119.25" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >vo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (1 samples, 0.89%)</title><rect x="220.7" y="133" width="10.6" height="15.0" fill="rgb(248,16,13)" rx="2" ry="2" />
<text text-anchor="" x="223.71" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bool __gnu_cxx::__ops::_Iter_comp_val&lt;std::greater&lt;std::pair&lt;int, int&gt; &gt; &gt;::operator (4 samples, 3.57%)</title><rect x="1021.4" y="117" width="42.2" height="15.0" fill="rgb(240,202,47)" rx="2" ry="2" />
<text text-anchor="" x="1024.43" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >boo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::operator- (1 samples, 0.89%)</title><rect x="979.3" y="133" width="10.5" height="15.0" fill="rgb(228,207,52)" rx="2" ry="2" />
<text text-anchor="" x="982.29" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::__pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;std::greater&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt; (18 samples, 16.07%)</title><rect x="431.4" y="133" width="189.7" height="15.0" fill="rgb(249,67,52)" rx="2" ry="2" />
<text text-anchor="" x="434.43" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >void std::__pop_heap&lt;__g..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt;::begin (3 samples, 2.68%)</title><rect x="737.0" y="165" width="31.6" height="15.0" fill="rgb(253,172,15)" rx="2" ry="2" />
<text text-anchor="" x="739.96" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >st..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;int&amp;, int&amp;&gt; (15 samples, 13.39%)</title><rect x="779.1" y="149" width="158.0" height="15.0" fill="rgb(211,105,16)" rx="2" ry="2" />
<text text-anchor="" x="782.11" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::pair&lt;int, int&gt;&amp;..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::operator- (1 samples, 0.89%)</title><rect x="863.4" y="117" width="10.5" height="15.0" fill="rgb(216,197,38)" rx="2" ry="2" />
<text text-anchor="" x="866.39" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::__fill_a&lt;int*, int&gt; (2 samples, 1.79%)</title><rect x="715.9" y="53" width="21.1" height="15.0" fill="rgb(231,171,54)" rx="2" ry="2" />
<text text-anchor="" x="718.89" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (2 samples, 1.79%)</title><rect x="94.3" y="197" width="21.1" height="15.0" fill="rgb(248,39,4)" rx="2" ry="2" />
<text text-anchor="" x="97.29" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::greater&lt;std::pair&lt;int, int&gt; &gt;::operator (3 samples, 2.68%)</title><rect x="1032.0" y="101" width="31.6" height="15.0" fill="rgb(225,218,27)" rx="2" ry="2" />
<text text-anchor="" x="1034.96" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >st..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::pair&lt;int, int&gt;&amp;&amp; std::forward&lt;std::pair&lt;int, int&gt; &gt; (1 samples, 0.89%)</title><rect x="916.1" y="53" width="10.5" height="15.0" fill="rgb(226,106,33)" rx="2" ry="2" />
<text text-anchor="" x="919.07" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_max_size (1 samples, 0.89%)</title><rect x="1137.3" y="85" width="10.6" height="15.0" fill="rgb(209,181,22)" rx="2" ry="2" />
<text text-anchor="" x="1140.32" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::priority_queue&lt;std::pair&lt;int, int&gt;, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;, std::greater&lt;std::pair&lt;int, int&gt; &gt; &gt;::top (5 samples, 4.46%)</title><rect x="621.1" y="165" width="52.7" height="15.0" fill="rgb(246,136,54)" rx="2" ry="2" />
<text text-anchor="" x="624.07" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bool __gnu_cxx::operator!=&lt;std::pair&lt;unsigned long, unsigned long&gt;*, std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt; (2 samples, 1.79%)</title><rect x="199.6" y="165" width="21.1" height="15.0" fill="rgb(247,186,44)" rx="2" ry="2" />
<text text-anchor="" x="202.64" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[ld-linux-x86-64.so.2] (1 samples, 0.89%)</title><rect x="20.5" y="149" width="10.6" height="15.0" fill="rgb(224,32,18)" rx="2" ry="2" />
<text text-anchor="" x="23.54" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;int, int&amp;&gt; (4 samples, 3.57%)</title><rect x="1105.7" y="149" width="42.2" height="15.0" fill="rgb(229,218,19)" rx="2" ry="2" />
<text text-anchor="" x="1108.71" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__libc_start_main (100 samples, 89.29%)</title><rect x="136.4" y="229" width="1053.6" height="15.0" fill="rgb(236,68,44)" rx="2" ry="2" />
<text text-anchor="" x="139.43" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__libc_start_main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (1 samples, 0.89%)</title><rect x="673.8" y="133" width="10.5" height="15.0" fill="rgb(237,199,25)" rx="2" ry="2" />
<text text-anchor="" x="676.75" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.89%)</title><rect x="926.6" y="101" width="10.5" height="15.0" fill="rgb(209,146,32)" rx="2" ry="2" />
<text text-anchor="" x="929.61" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::operator* (1 samples, 0.89%)</title><rect x="1147.9" y="133" width="10.5" height="15.0" fill="rgb(232,11,53)" rx="2" ry="2" />
<text text-anchor="" x="1150.86" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::priority_queue&lt;std::pair&lt;int, int&gt;, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;, std::greater&lt;std::pair&lt;int, int&gt; &gt; &gt;::~priority_queue (1 samples, 0.89%)</title><rect x="673.8" y="165" width="10.5" height="15.0" fill="rgb(236,202,41)" rx="2" ry="2" />
<text text-anchor="" x="676.75" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>int&amp; std::forward&lt;int&amp;&gt; (4 samples, 3.57%)</title><rect x="789.6" y="133" width="42.2" height="15.0" fill="rgb(237,132,9)" rx="2" ry="2" />
<text text-anchor="" x="792.64" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >int..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (1 samples, 0.89%)</title><rect x="104.8" y="165" width="10.6" height="15.0" fill="rgb(248,102,35)" rx="2" ry="2" />
<text text-anchor="" x="107.82" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1 samples, 0.89%)</title><rect x="673.8" y="101" width="10.5" height="15.0" fill="rgb(227,95,50)" rx="2" ry="2" />
<text text-anchor="" x="676.75" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[ld-linux-x86-64.so.2] (7 samples, 6.25%)</title><rect x="20.5" y="197" width="73.8" height="15.0" fill="rgb(247,102,37)" rx="2" ry="2" />
<text text-anchor="" x="23.54" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[ld-linu..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::end (1 samples, 0.89%)</title><rect x="1105.7" y="117" width="10.5" height="15.0" fill="rgb(233,39,50)" rx="2" ry="2" />
<text text-anchor="" x="1108.71" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::priority_queue&lt;std::pair&lt;int, int&gt;, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;, std::greater&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace&lt;int, int&amp;&gt; (5 samples, 4.46%)</title><rect x="1105.7" y="165" width="52.7" height="15.0" fill="rgb(230,228,13)" rx="2" ry="2" />
<text text-anchor="" x="1108.71" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >void ..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (1 samples, 0.89%)</title><rect x="673.8" y="117" width="10.5" height="15.0" fill="rgb(216,142,20)" rx="2" ry="2" />
<text text-anchor="" x="676.75" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.89%)</title><rect x="863.4" y="101" width="10.5" height="15.0" fill="rgb(242,139,8)" rx="2" ry="2" />
<text text-anchor="" x="866.39" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_append&lt;int&amp;, int&amp;&gt; (1 samples, 0.89%)</title><rect x="895.0" y="117" width="10.5" height="15.0" fill="rgb(252,63,0)" rx="2" ry="2" />
<text text-anchor="" x="898.00" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (1 samples, 0.89%)</title><rect x="1137.3" y="117" width="10.6" height="15.0" fill="rgb(232,11,47)" rx="2" ry="2" />
<text text-anchor="" x="1140.32" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (4 samples, 3.57%)</title><rect x="631.6" y="133" width="42.2" height="15.0" fill="rgb(214,164,35)" rx="2" ry="2" />
<text text-anchor="" x="634.61" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[ld-linux-x86-64.so.2] (3 samples, 2.68%)</title><rect x="62.7" y="101" width="31.6" height="15.0" fill="rgb(229,10,11)" rx="2" ry="2" />
<text text-anchor="" x="65.68" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[l..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::pair&lt;int, int&gt;::operator= (1 samples, 0.89%)</title><rect x="505.2" y="101" width="10.5" height="15.0" fill="rgb(233,87,8)" rx="2" ry="2" />
<text text-anchor="" x="508.18" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Graph::dijkstra (96 samples, 85.71%)</title><rect x="147.0" y="181" width="1011.4" height="15.0" fill="rgb(214,113,40)" rx="2" ry="2" />
<text text-anchor="" x="149.96" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Graph::dijkstra</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>int* std::uninitialized_fill_n&lt;int*, unsigned long, int&gt; (2 samples, 1.79%)</title><rect x="715.9" y="117" width="21.1" height="15.0" fill="rgb(214,98,27)" rx="2" ry="2" />
<text text-anchor="" x="718.89" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;, long, std::pair&lt;int, int&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;std::greater&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt; (11 samples, 9.82%)</title><rect x="494.6" y="117" width="115.9" height="15.0" fill="rgb(254,83,29)" rx="2" ry="2" />
<text text-anchor="" x="497.64" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >void std::__ad..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>main (100 samples, 89.29%)</title><rect x="136.4" y="197" width="1053.6" height="15.0" fill="rgb(233,190,49)" rx="2" ry="2" />
<text text-anchor="" x="139.43" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::priority_queue&lt;std::pair&lt;int, int&gt;, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;, std::greater&lt;std::pair&lt;int, int&gt; &gt; &gt;::empty (1 samples, 0.89%)</title><rect x="220.7" y="165" width="10.6" height="15.0" fill="rgb(254,116,16)" rx="2" ry="2" />
<text text-anchor="" x="223.71" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (2 samples, 1.79%)</title><rect x="905.5" y="85" width="21.1" height="15.0" fill="rgb(234,13,48)" rx="2" ry="2" />
<text text-anchor="" x="908.54" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (2 samples, 1.79%)</title><rect x="905.5" y="117" width="21.1" height="15.0" fill="rgb(243,100,30)" rx="2" ry="2" />
<text text-anchor="" x="908.54" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>int* std::fill_n&lt;int*, unsigned long, int&gt; (2 samples, 1.79%)</title><rect x="715.9" y="85" width="21.1" height="15.0" fill="rgb(232,197,26)" rx="2" ry="2" />
<text text-anchor="" x="718.89" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::front (5 samples, 4.46%)</title><rect x="621.1" y="149" width="52.7" height="15.0" fill="rgb(244,218,19)" rx="2" ry="2" />
<text text-anchor="" x="624.07" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (1 samples, 0.89%)</title><rect x="937.1" y="149" width="10.6" height="15.0" fill="rgb(221,209,28)" rx="2" ry="2" />
<text text-anchor="" x="940.14" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (1 samples, 0.89%)</title><rect x="104.8" y="149" width="10.6" height="15.0" fill="rgb(217,121,38)" rx="2" ry="2" />
<text text-anchor="" x="107.82" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::priority_queue&lt;std::pair&lt;int, int&gt;, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;, std::greater&lt;std::pair&lt;int, int&gt; &gt; &gt;::pop (37 samples, 33.04%)</title><rect x="231.3" y="165" width="389.8" height="15.0" fill="rgb(238,196,20)" rx="2" ry="2" />
<text text-anchor="" x="234.25" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::priority_queue&lt;std::pair&lt;int, int&gt;, std::vector&lt;..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (3 samples, 2.68%)</title><rect x="705.4" y="165" width="31.6" height="15.0" fill="rgb(237,18,53)" rx="2" ry="2" />
<text text-anchor="" x="708.36" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >st..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[ld-linux-x86-64.so.2] (6 samples, 5.36%)</title><rect x="31.1" y="117" width="63.2" height="15.0" fill="rgb(230,202,16)" rx="2" ry="2" />
<text text-anchor="" x="34.07" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[ld-li..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (2 samples, 1.79%)</title><rect x="947.7" y="133" width="21.1" height="15.0" fill="rgb(251,118,10)" rx="2" ry="2" />
<text text-anchor="" x="950.68" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[ld-linux-x86-64.so.2] (12 samples, 10.71%)</title><rect x="10.0" y="245" width="126.4" height="15.0" fill="rgb(216,34,45)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[ld-linux-x86-6..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::end (2 samples, 1.79%)</title><rect x="947.7" y="149" width="21.1" height="15.0" fill="rgb(241,78,53)" rx="2" ry="2" />
<text text-anchor="" x="950.68" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::pair&lt;int, int&gt;::operator= (3 samples, 2.68%)</title><rect x="463.0" y="117" width="31.6" height="15.0" fill="rgb(251,191,54)" rx="2" ry="2" />
<text text-anchor="" x="466.04" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >st..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::__push_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;, long, std::pair&lt;int, int&gt;, __gnu_cxx::__ops::_Iter_comp_val&lt;std::greater&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt; (1 samples, 0.89%)</title><rect x="610.5" y="117" width="10.6" height="15.0" fill="rgb(253,132,16)" rx="2" ry="2" />
<text text-anchor="" x="613.54" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::remove_reference&lt;std::pair&lt;int, int&gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::pair&lt;int, int&gt;&amp;&gt; (1 samples, 0.89%)</title><rect x="989.8" y="133" width="10.6" height="15.0" fill="rgb(218,131,13)" rx="2" ry="2" />
<text text-anchor="" x="992.82" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>int&amp;&amp; std::forward&lt;int&gt; (1 samples, 0.89%)</title><rect x="1074.1" y="101" width="10.5" height="15.0" fill="rgb(241,126,23)" rx="2" ry="2" />
<text text-anchor="" x="1077.11" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::operator* (1 samples, 0.89%)</title><rect x="1000.4" y="117" width="10.5" height="15.0" fill="rgb(237,100,51)" rx="2" ry="2" />
<text text-anchor="" x="1003.36" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (2 samples, 1.79%)</title><rect x="684.3" y="165" width="21.1" height="15.0" fill="rgb(244,178,39)" rx="2" ry="2" />
<text text-anchor="" x="687.29" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>int&amp;&amp; std::forward&lt;int&gt; (1 samples, 0.89%)</title><rect x="600.0" y="69" width="10.5" height="15.0" fill="rgb(206,112,18)" rx="2" ry="2" />
<text text-anchor="" x="603.00" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::operator+ (1 samples, 0.89%)</title><rect x="1010.9" y="117" width="10.5" height="15.0" fill="rgb(224,60,14)" rx="2" ry="2" />
<text text-anchor="" x="1013.89" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::empty (1 samples, 0.89%)</title><rect x="220.7" y="149" width="10.6" height="15.0" fill="rgb(232,122,10)" rx="2" ry="2" />
<text text-anchor="" x="223.71" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::__push_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;, long, std::pair&lt;int, int&gt;, __gnu_cxx::__ops::_Iter_comp_val&lt;std::greater&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt; (10 samples, 8.93%)</title><rect x="1000.4" y="133" width="105.3" height="15.0" fill="rgb(219,76,4)" rx="2" ry="2" />
<text text-anchor="" x="1003.36" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >void std::__..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::pair&lt;int, int&gt;::pair&lt;int&amp;, int&amp;, true&gt; (1 samples, 0.89%)</title><rect x="842.3" y="133" width="10.6" height="15.0" fill="rgb(246,12,47)" rx="2" ry="2" />
<text text-anchor="" x="845.32" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (2 samples, 1.79%)</title><rect x="73.2" y="69" width="21.1" height="15.0" fill="rgb(243,202,26)" rx="2" ry="2" />
<text text-anchor="" x="76.21" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (112 samples, 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(214,21,35)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::push_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;, std::greater&lt;std::pair&lt;int, int&gt; &gt; &gt; (13 samples, 11.61%)</title><rect x="968.8" y="149" width="136.9" height="15.0" fill="rgb(243,14,29)" rx="2" ry="2" />
<text text-anchor="" x="971.75" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >void std::push_he..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.89%)</title><rect x="526.2" y="85" width="10.6" height="15.0" fill="rgb(237,1,30)" rx="2" ry="2" />
<text text-anchor="" x="529.25" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (1 samples, 0.89%)</title><rect x="125.9" y="213" width="10.5" height="15.0" fill="rgb(232,6,23)" rx="2" ry="2" />
<text text-anchor="" x="128.89" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;, std::greater&lt;std::pair&lt;int, int&gt; &gt; &gt; (27 samples, 24.11%)</title><rect x="336.6" y="149" width="284.5" height="15.0" fill="rgb(214,169,42)" rx="2" ry="2" />
<text text-anchor="" x="339.61" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >void std::pop_heap&lt;__gnu_cxx::__normal..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::max_size (1 samples, 0.89%)</title><rect x="1137.3" y="101" width="10.6" height="15.0" fill="rgb(216,224,5)" rx="2" ry="2" />
<text text-anchor="" x="1140.32" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__enable_if&lt;std::__is_scalar&lt;int&gt;::__value, void&gt;::__type std::__fill_a1&lt;int*, int&gt; (1 samples, 0.89%)</title><rect x="726.4" y="37" width="10.6" height="15.0" fill="rgb(216,101,19)" rx="2" ry="2" />
<text text-anchor="" x="729.43" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (4 samples, 3.57%)</title><rect x="252.3" y="149" width="42.2" height="15.0" fill="rgb(230,225,23)" rx="2" ry="2" />
<text text-anchor="" x="255.32" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (1 samples, 0.89%)</title><rect x="926.6" y="117" width="10.5" height="15.0" fill="rgb(220,77,3)" rx="2" ry="2" />
<text text-anchor="" x="929.61" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;unsigned long, unsigned long&gt;*, std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt;::base (2 samples, 1.79%)</title><rect x="199.6" y="149" width="21.1" height="15.0" fill="rgb(219,97,45)" rx="2" ry="2" />
<text text-anchor="" x="202.64" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (2 samples, 1.79%)</title><rect x="94.3" y="181" width="21.1" height="15.0" fill="rgb(219,31,33)" rx="2" ry="2" />
<text text-anchor="" x="97.29" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.89%)</title><rect x="1105.7" y="101" width="10.5" height="15.0" fill="rgb(249,69,6)" rx="2" ry="2" />
<text text-anchor="" x="1108.71" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;unsigned long, unsigned long&gt;*, std::vector&lt;std::pair&lt;unsigned long, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt;::__normal_iterator (2 samples, 1.79%)</title><rect x="747.5" y="149" width="21.1" height="15.0" fill="rgb(232,181,14)" rx="2" ry="2" />
<text text-anchor="" x="750.50" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (2 samples, 1.79%)</title><rect x="273.4" y="133" width="21.1" height="15.0" fill="rgb(242,218,51)" rx="2" ry="2" />
<text text-anchor="" x="276.39" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt; (1 samples, 0.89%)</title><rect x="884.5" y="117" width="10.5" height="15.0" fill="rgb(252,0,18)" rx="2" ry="2" />
<text text-anchor="" x="887.46" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::base (1 samples, 0.89%)</title><rect x="884.5" y="101" width="10.5" height="15.0" fill="rgb(216,72,2)" rx="2" ry="2" />
<text text-anchor="" x="887.46" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.89%)</title><rect x="937.1" y="133" width="10.6" height="15.0" fill="rgb(212,138,34)" rx="2" ry="2" />
<text text-anchor="" x="940.14" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::remove_reference&lt;std::pair&lt;int, int&gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::pair&lt;int, int&gt;&amp;&gt; (2 samples, 1.79%)</title><rect x="1084.6" y="117" width="21.1" height="15.0" fill="rgb(212,110,7)" rx="2" ry="2" />
<text text-anchor="" x="1087.64" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>int&amp; std::forward&lt;int&amp;&gt; (1 samples, 0.89%)</title><rect x="768.6" y="149" width="10.5" height="15.0" fill="rgb(246,129,43)" rx="2" ry="2" />
<text text-anchor="" x="771.57" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_start (100 samples, 89.29%)</title><rect x="136.4" y="245" width="1053.6" height="15.0" fill="rgb(207,28,0)" rx="2" ry="2" />
<text text-anchor="" x="139.43" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_start</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::operator+ (5 samples, 4.46%)</title><rect x="536.8" y="85" width="52.7" height="15.0" fill="rgb(211,222,52)" rx="2" ry="2" />
<text text-anchor="" x="539.79" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__gnu..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[ld-linux-x86-64.so.2] (9 samples, 8.04%)</title><rect x="20.5" y="229" width="94.9" height="15.0" fill="rgb(212,33,5)" rx="2" ry="2" />
<text text-anchor="" x="23.54" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[ld-linux-x..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::__relocate_object_a&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (2 samples, 1.79%)</title><rect x="905.5" y="69" width="21.1" height="15.0" fill="rgb(237,126,53)" rx="2" ry="2" />
<text text-anchor="" x="908.54" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[ld-linux-x86-64.so.2] (1 samples, 0.89%)</title><rect x="20.5" y="165" width="10.6" height="15.0" fill="rgb(232,136,17)" rx="2" ry="2" />
<text text-anchor="" x="23.54" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_fill_initialize (2 samples, 1.79%)</title><rect x="715.9" y="149" width="21.1" height="15.0" fill="rgb(220,21,9)" rx="2" ry="2" />
<text text-anchor="" x="718.89" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[ld-linux-x86-64.so.2] (7 samples, 6.25%)</title><rect x="20.5" y="213" width="73.8" height="15.0" fill="rgb(209,51,3)" rx="2" ry="2" />
<text text-anchor="" x="23.54" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[ld-linu..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cfree (1 samples, 0.89%)</title><rect x="673.8" y="85" width="10.5" height="15.0" fill="rgb(238,207,27)" rx="2" ry="2" />
<text text-anchor="" x="676.75" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_dl_catch_exception (6 samples, 5.36%)</title><rect x="31.1" y="165" width="63.2" height="15.0" fill="rgb(217,71,51)" rx="2" ry="2" />
<text text-anchor="" x="34.07" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_dl_ca..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>operator new (1 samples, 0.89%)</title><rect x="831.8" y="133" width="10.5" height="15.0" fill="rgb(239,187,46)" rx="2" ry="2" />
<text text-anchor="" x="834.79" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::operator* (1 samples, 0.89%)</title><rect x="494.6" y="101" width="10.6" height="15.0" fill="rgb(221,87,21)" rx="2" ry="2" />
<text text-anchor="" x="497.64" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::operator-- (2 samples, 1.79%)</title><rect x="410.4" y="133" width="21.0" height="15.0" fill="rgb(217,22,9)" rx="2" ry="2" />
<text text-anchor="" x="413.36" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (2 samples, 1.79%)</title><rect x="94.3" y="213" width="21.1" height="15.0" fill="rgb(224,190,18)" rx="2" ry="2" />
<text text-anchor="" x="97.29" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (2 samples, 1.79%)</title><rect x="73.2" y="53" width="21.1" height="15.0" fill="rgb(213,56,19)" rx="2" ry="2" />
<text text-anchor="" x="76.21" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[ld-linux-x86-64.so.2] (6 samples, 5.36%)</title><rect x="31.1" y="149" width="63.2" height="15.0" fill="rgb(238,58,21)" rx="2" ry="2" />
<text text-anchor="" x="34.07" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[ld-li..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bool std::operator&lt; &lt;int, int&gt; (1 samples, 0.89%)</title><rect x="1053.0" y="69" width="10.6" height="15.0" fill="rgb(216,36,46)" rx="2" ry="2" />
<text text-anchor="" x="1056.04" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>int* std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;int*, unsigned long, int&gt; (2 samples, 1.79%)</title><rect x="715.9" y="101" width="21.1" height="15.0" fill="rgb(214,157,4)" rx="2" ry="2" />
<text text-anchor="" x="718.89" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (3 samples, 2.68%)</title><rect x="62.7" y="85" width="31.6" height="15.0" fill="rgb(248,139,47)" rx="2" ry="2" />
<text text-anchor="" x="65.68" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[u..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (2 samples, 1.79%)</title><rect x="115.4" y="229" width="21.0" height="15.0" fill="rgb(214,96,34)" rx="2" ry="2" />
<text text-anchor="" x="118.36" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt; (2 samples, 1.79%)</title><rect x="389.3" y="133" width="21.1" height="15.0" fill="rgb(244,33,24)" rx="2" ry="2" />
<text text-anchor="" x="392.29" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt; const*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.89%)</title><rect x="220.7" y="117" width="10.6" height="15.0" fill="rgb(232,83,47)" rx="2" ry="2" />
<text text-anchor="" x="223.71" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::back (3 samples, 2.68%)</title><rect x="852.9" y="133" width="31.6" height="15.0" fill="rgb(226,167,40)" rx="2" ry="2" />
<text text-anchor="" x="855.86" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >st..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (2 samples, 1.79%)</title><rect x="1168.9" y="181" width="21.1" height="15.0" fill="rgb(220,23,48)" rx="2" ry="2" />
<text text-anchor="" x="1171.93" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::operator* (1 samples, 0.89%)</title><rect x="452.5" y="117" width="10.5" height="15.0" fill="rgb(252,147,50)" rx="2" ry="2" />
<text text-anchor="" x="455.50" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (2 samples, 1.79%)</title><rect x="315.5" y="133" width="21.1" height="15.0" fill="rgb(254,154,19)" rx="2" ry="2" />
<text text-anchor="" x="318.54" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>int* std::__fill_n_a&lt;int*, unsigned long, int&gt; (2 samples, 1.79%)</title><rect x="715.9" y="69" width="21.1" height="15.0" fill="rgb(218,156,32)" rx="2" ry="2" />
<text text-anchor="" x="718.89" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::end (4 samples, 3.57%)</title><rect x="294.5" y="149" width="42.1" height="15.0" fill="rgb(223,156,53)" rx="2" ry="2" />
<text text-anchor="" x="297.46" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_append&lt;int&amp;, int&amp;&gt; (5 samples, 4.46%)</title><rect x="884.5" y="133" width="52.6" height="15.0" fill="rgb(245,49,15)" rx="2" ry="2" />
<text text-anchor="" x="887.46" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >void ..</text>
</g>
</svg>
